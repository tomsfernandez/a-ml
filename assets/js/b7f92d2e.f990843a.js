"use strict";(self.webpackChunkaml_website=self.webpackChunkaml_website||[]).push([[3527],{3416:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(7294),n=a(1736);const o={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/main/"},l={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/main/",scala:"scala/scalaPlatform/",java:"java/javaPlatform/",ts:"ts/"};const s=e=>{let{AMFVersion:t,language:a,example:s,lineStart:i,lineEnd:u,hideLink:c,fromMain:m}=e;const d=(0,r.useRef)(!0),[p,h]=(0,r.useState)(""),[f,k]=(0,r.useState)(""),v=(0,r.useCallback)((async()=>{const e=function(e){return"v4"===e?o:l}(t),r=function(e,t){if(t===o)return"";switch(e){case"scala":default:return t.scala;case"java":return t.java;case"ts":return t.ts;case"js":return t.js}}(a,e),n=(m?e.mainUrl:e.testsUrl)+r+s,c=n.replace("raw.githubusercontent.com/aml-org/examples","github.com/aml-org/examples/tree"),p=await fetch(n),f=await p.text();if(!d.current)return null;if(k(c),h(f),u-i>0){let e=f.split("\n").slice(i,u).join("\n");h(e)}}),[]);return(0,r.useEffect)((()=>(v(),()=>{d.current=!1})),[]),r.createElement("div",null,r.createElement(n.Z,{className:a},p),!c&&r.createElement("p",null,"Code extracted from the examples ",r.createElement("strong",null,r.createElement("a",{href:f},"GitHub repository")),"."))}},8215:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(7294);const n=function(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>c});var r=a(7462),n=a(7294),o=a(2389),l=a(5773),s=a(6010);const i="tabItem_LplD";function u(e){var t,a,o;const{lazy:u,block:c,defaultValue:m,values:d,groupId:p,className:h}=e,f=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=d?d:f.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),v=(0,l.lx)(k,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const N=null===m?m:null!=(t=null!=m?m:null==(a=f.find((e=>e.props.default)))?void 0:a.props.value)?t:null==(o=f[0])?void 0:o.props.value;if(null!==N&&!k.some((e=>e.value===N)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+k.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:b}=(0,l.UB)(),[C,w]=(0,n.useState)(N),y=[],{blockElementScrollPositionUntilNextRender:x}=(0,l.o5)();if(null!=p){const e=g[p];null!=e&&e!==C&&k.some((t=>t.value===e))&&w(e)}const R=e=>{const t=e.currentTarget,a=y.indexOf(t),r=k[a].value;r!==C&&(x(t),w(r),null!=p&&b(p,r))},T=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=y.indexOf(e.currentTarget)+1;a=y[t]||y[0];break}case"ArrowLeft":{const t=y.indexOf(e.currentTarget)-1;a=y[t]||y[y.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},h)},k.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>y.push(e),onKeyDown:T,onFocus:R,onClick:R},o,{className:(0,s.Z)("tabs__item",i,null==o?void 0:o.className,{"tabs__item--active":C===t})}),null!=a?a:t)}))),u?(0,n.cloneElement)(f.filter((e=>e.props.value===C))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},f.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function c(e){const t=(0,o.Z)();return n.createElement(u,(0,r.Z)({key:String(t)},e))}},459:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>i,contentTitle:()=>u,metadata:()=>c,toc:()=>m,default:()=>p});var r=a(7462),n=(a(7294),a(3905)),o=a(9877),l=a(8215),s=a(3416);const i={id:"resource_loaders",title:"Custom resource loaders"},u=void 0,c={unversionedId:"Customizable Configurations/resource_loaders",id:"version-4.x.x/Customizable Configurations/resource_loaders",title:"Custom resource loaders",description:"AMF allows you to define custom resource loaders that you can fully customize and plug into AMF\u2019s parsers.",source:"@site/versioned_docs/version-4.x.x/Customizable Configurations/resource-loaders.mdx",sourceDirName:"Customizable Configurations",slug:"/Customizable Configurations/resource_loaders",permalink:"/a-ml/docs/v4/Customizable Configurations/resource_loaders",editUrl:"https://github.com/aml-org/a-ml/edit/develop/versioned_docs/version-4.x.x/Customizable Configurations/resource-loaders.mdx",tags:[],version:"4.x.x",lastUpdatedBy:"Tomas Fernandez",lastUpdatedAt:1645135672,formattedLastUpdatedAt:"2/17/2022",frontMatter:{id:"resource_loaders",title:"Custom resource loaders"},sidebar:"version-4.x.x/myAutogeneratedSidebar",previous:{title:"Custom error handlers",permalink:"/a-ml/docs/v4/Customizable Configurations/error_handlers"},next:{title:"Control threads in AMF",permalink:"/a-ml/docs/v4/Customizable Configurations/scheduler"}},m=[{value:"Implement a new resource loader",id:"implement-a-new-resource-loader",children:[],level:2},{value:"Configure your custom resource loader",id:"configure-your-custom-resource-loader",children:[],level:2},{value:"How URI normalization works",id:"how-uri-normalization-works",children:[{value:"Example URI normalization",id:"example-uri-normalization",children:[],level:3}],level:2},{value:"Example code for a custom resource loader",id:"example-code-for-a-custom-resource-loader",children:[],level:2}],d={toc:m};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"AMF allows you to define custom resource loaders that you can fully customize and plug into AMF\u2019s parsers."),(0,n.kt)("p",null,"By default, AMF provides the following resource loaders:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"JVM",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"FileResourceLoader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HttpResourceLoader")))),(0,n.kt)("li",{parentName:"ul"},"JS Server",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"JsServerFileResourceLoader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"JsServerHttpResourceLoader")))),(0,n.kt)("li",{parentName:"ul"},"JS Browser",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"JsBrowserHttpResourceLoader"))))),(0,n.kt)("p",null,"However, you may encounter situations in which you need to parse resources that can't be fetched by a HTTP or file resource loader.\nOr you may have cases where you want to use a custom nomenclature or resolution mechanism for the URIs used to reference content."),(0,n.kt)("p",null,"In such cases, use custom resource loaders."),(0,n.kt)("h2",{id:"implement-a-new-resource-loader"},"Implement a new resource loader"),(0,n.kt)("p",null,"To implement a new resource loader, extend the ",(0,n.kt)("inlineCode",{parentName:"p"},"amf.client.resource.ResourceLoader")," interface and define your own resource loader."),(0,n.kt)("p",null,"The ResourceLoader interface contains two methods, ",(0,n.kt)("inlineCode",{parentName:"p"},"fetch")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"accepts"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala",metastring:'title="amf.client.resource.ResourceLoader.scala"',title:'"amf.client.resource.ResourceLoader.scala"'},"  /** Fetch specified resource and return associated content. Resource should have been previously accepted. */\n  /** If the resource not exists, you should return a future failed with an ResourceNotFound exception. */\n  def fetch(resource: String): ClientFuture[Content]\n\n  /** Accepts specified resource. */\n  def accepts(resource: String): Boolean = true\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"accepts(resource: string): boolean")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"AMF uses this method to ask every resource loader in the environment if it can fetch the current resource.\nIf a loader can't fetch the resource, AMF raises an ",(0,n.kt)("inlineCode",{parentName:"li"},"UnsupportedUrlScheme")," exception."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"fetch(resource: string): ClientFuture[Content]")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"This method loads the resource according to your custom implementation, and returns an asynchronous ",(0,n.kt)("inlineCode",{parentName:"li"},"Content")," object.")))),(0,n.kt)("p",null,"AMF stores the ",(0,n.kt)("inlineCode",{parentName:"p"},"Content")," object at ",(0,n.kt)("inlineCode",{parentName:"p"},"amf.client.remote.Content"),", and it contains:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The resource fetched as a stream"),(0,n.kt)("li",{parentName:"ul"},"The URL from which the resource was fetched"),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"},"media type")," of the resource")),(0,n.kt)("h2",{id:"configure-your-custom-resource-loader"},"Configure your custom resource loader"),(0,n.kt)("p",null,"All parsers receive an optional ",(0,n.kt)("inlineCode",{parentName:"p"},"Environment")," parameter in their constructor.\nYou can use the ",(0,n.kt)("inlineCode",{parentName:"p"},"Environment")," parameter to add your custom resource loaders:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="CustomResourceLoader.java"',title:'"CustomResourceLoader.java"'},"Environment env = DefaultEnvironment.apply().add(new CustomResourceLoader());\nRaml10Parser parser = new Raml10Parser(env);\n")),(0,n.kt)("h2",{id:"how-uri-normalization-works"},"How URI normalization works"),(0,n.kt)("p",null,"Before fetching, every URI goes through a ",(0,n.kt)("strong",{parentName:"p"},"normalization")," process to ensure consistency and standardization.\nNormalization includes the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Encode string"),": Computes a new version of the string in which each instance of certain characters is replaced by one, two, three, or four escape sequences representing UTF-8 character encoding.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Normalization (",(0,n.kt)("inlineCode",{parentName:"strong"},"java.net.URI.normalize"),")"),": Transforms a URI into a normalized, or canonical, URI to determine if two syntactically different URIs are equivalent.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Resolve relativeness"),": If a URI is relative, appends the location of the file from which the URI originates to the base of the processed relative URI."))),(0,n.kt)("h3",{id:"example-uri-normalization"},"Example URI normalization"),(0,n.kt)("p",null,"The following example demonstrates the normalization process using a RAML API that references an external JSON file:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"URI of main RAML API: ",(0,n.kt)("inlineCode",{parentName:"li"},"file:///Users/user/api.raml")),(0,n.kt)("li",{parentName:"ul"},"Reference to JSON file: ",(0,n.kt)("inlineCode",{parentName:"li"},"type: !include ./folder/../external file.json"))),(0,n.kt)("p",null,"The URI is normalized following the three steps described above:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Encode string"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The URI is transformed to ",(0,n.kt)("inlineCode",{parentName:"li"},"./folder/../external%20file.json"),". The blank space between words is encoded."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Normalization"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The relative path and folder structure are removed, the URI is transformed to ",(0,n.kt)("inlineCode",{parentName:"li"},"external%20file.json"),"."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Resolve relativeness"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The reference was relative, so the URI of the main file is appended to the base of the reference URI: ",(0,n.kt)("inlineCode",{parentName:"li"},"file:///Users/user/external%20file.json"))))),(0,n.kt)("p",null,"Finally, resource loaders will use the following normalized URI to fetch the JSON file: ",(0,n.kt)("inlineCode",{parentName:"p"},"file:///Users/user/external%20file.json"),"."),(0,n.kt)("h2",{id:"example-code-for-a-custom-resource-loader"},"Example code for a custom resource loader"),(0,n.kt)("p",null,"The following example code is for a custom resource loader that obtains resources using a custom protocol:"),(0,n.kt)(o.Z,{groupId:"languages",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)(s.Z,{AMFVersion:"v4",language:"java",example:"java/ResourceLoaderTest.java",mdxType:"CodeGetter"})),(0,n.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)(s.Z,{AMFVersion:"v4",language:"js",example:"js/resource-loader.test.js",mdxType:"CodeGetter"}))))}p.isMDXComponent=!0}}]);