"use strict";(self.webpackChunkaml_website=self.webpackChunkaml_website||[]).push([[8846],{3416:(e,a,t)=>{t.d(a,{Z:()=>i});var n=t(7294),l=t(1736);const r={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/main/"},s={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/main/",scala:"scala/scalaPlatform/",java:"java/javaPlatform/",ts:"ts/"};const i=e=>{let{AMFVersion:a,language:t,example:i,lineStart:o,lineEnd:m,hideLink:u,fromMain:c}=e;const p=(0,n.useRef)(!0),[d,h]=(0,n.useState)(""),[g,f]=(0,n.useState)(""),b=(0,n.useCallback)((async()=>{const e=function(e){return"v4"===e?r:s}(a),n=function(e,a){if(a===r)return"";switch(e){case"scala":default:return a.scala;case"java":return a.java;case"ts":return a.ts;case"js":return a.js}}(t,e),l=(c?e.mainUrl:e.testsUrl)+n+i,u=l.replace("raw.githubusercontent.com/aml-org/examples","github.com/aml-org/examples/tree"),d=await fetch(l),g=await d.text();if(!p.current)return null;if(f(u),h(g),m-o>0){let e=g.split("\n").slice(o,m).join("\n");h(e)}}),[]);return(0,n.useEffect)((()=>(b(),()=>{p.current=!1})),[]),n.createElement("div",null,n.createElement(l.Z,{className:t},d),!u&&n.createElement("p",null,"Code extracted from the examples ",n.createElement("strong",null,n.createElement("a",{href:g},"GitHub repository")),"."))}},8215:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294);const l=function(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",hidden:t,className:l},a)}},9877:(e,a,t)=>{t.d(a,{Z:()=>u});var n=t(7462),l=t(7294),r=t(2389),s=t(5773),i=t(6010);const o="tabItem_LplD";function m(e){var a,t,r;const{lazy:m,block:u,defaultValue:c,values:p,groupId:d,className:h}=e,g=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=p?p:g.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),b=(0,s.lx)(f,((e,a)=>e.value===a.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===c?c:null!=(a=null!=c?c:null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)?a:null==(r=g[0])?void 0:r.props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:A}=(0,s.UB)(),[M,x]=(0,l.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:N}=(0,s.o5)();if(null!=d){const e=k[d];null!=e&&e!==M&&f.some((a=>a.value===e))&&x(e)}const F=e=>{const a=e.currentTarget,t=w.indexOf(a),n=f[t].value;n!==M&&(N(a),x(n),null!=d&&A(d,n))},y=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]||w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]||w[w.length-1];break}}null==(a=t)||a.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},h)},f.map((e=>{let{value:a,label:t,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:M===a?0:-1,"aria-selected":M===a,key:a,ref:e=>w.push(e),onKeyDown:y,onFocus:F,onClick:F},r,{className:(0,i.Z)("tabs__item",o,null==r?void 0:r.className,{"tabs__item--active":M===a})}),null!=t?t:a)}))),m?(0,l.cloneElement)(g.filter((e=>e.props.value===M))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},g.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==M})))))}function u(e){const a=(0,r.Z)();return l.createElement(m,(0,n.Z)({key:String(a)},e))}},3219:(e,a,t)=>{t.r(a),t.d(a,{frontMatter:()=>o,contentTitle:()=>m,metadata:()=>u,toc:()=>c,default:()=>d});var n=t(7462),l=(t(7294),t(3905)),r=t(9877),s=t(8215),i=t(3416);const o={id:"amf_parsing",title:"Parsing with AMF"},m=void 0,u={unversionedId:"AMF/Using AMF/amf_parsing",id:"version-4.x.x/AMF/Using AMF/amf_parsing",title:"Parsing with AMF",description:"AMF can parse AML dialects and the following API specifications:",source:"@site/versioned_docs/version-4.x.x/AMF/Using AMF/3-Parsing with AMF.mdx",sourceDirName:"AMF/Using AMF",slug:"/AMF/Using AMF/amf_parsing",permalink:"/docs/v4/AMF/Using AMF/amf_parsing",editUrl:"https://github.com/aml-org/a-ml/edit/develop/versioned_docs/version-4.x.x/AMF/Using AMF/3-Parsing with AMF.mdx",tags:[],version:"4.x.x",lastUpdatedBy:"arielmirra",lastUpdatedAt:1631571646,formattedLastUpdatedAt:"9/13/2021",sidebarPosition:3,frontMatter:{id:"amf_parsing",title:"Parsing with AMF"},sidebar:"version-4.x.x/myAutogeneratedSidebar",previous:{title:"AMF initialization",permalink:"/docs/v4/AMF/Using AMF/amf_initialization"},next:{title:"Resolution",permalink:"/docs/v4/AMF/Using AMF/amf_resolution"}},c=[{value:"Parsing Basics",id:"parsing-basics",children:[],level:2},{value:"Parsing code examples",id:"parsing-code-examples",children:[],level:2}],p={toc:c};function d(e){let{components:a,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,o,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"AMF can parse ",(0,l.kt)("a",{parentName:"p",href:"https://aml-org.github.io/aml-spec/dialects"},"AML dialects")," and the following API specifications:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/raml-org/raml-spec/blob/master/versions/raml-08/raml-08.md"},"RAML 0.8")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md"},"RAML 1.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md"},"OAS 2.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md"},"OAS 3.0")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/asyncapi/asyncapi/blob/master/versions/2.0.0/asyncapi.md"},"AsyncAPI 2.0"))),(0,l.kt)("p",null,"The following section explains the basics of parsing, and the example shows how to parse each specification in Java or JavaScript."),(0,l.kt)("h2",{id:"parsing-basics"},"Parsing Basics"),(0,l.kt)("p",null,"Parsing is the process of analyzing a sequence of tokens and then building a data structure from them."),(0,l.kt)("p",null,"AMF uses ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aml-org/syaml"},"SYAML")," to read a JSON or YAML file and generates an ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Abstract_syntax_tree"},"abstract syntax tree")," (AST)\nfrom the file, which is later used to generate a graph that represents the model.\nThe model can be either a Web API model (representing an API, independent of its specification), or an AML document model (a dialect, vocabulary, or dialect instance)."),(0,l.kt)("p",null,"Parsing returns a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#baseunit"},"BaseUnit")," object, which is a graph of the model.\nDepending on the content in the parsed file, the BaseUnit object can be a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#fragment"},"Fragment"),", a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#module"},"Module"),",\na ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#document"},"Document")," or another type."),(0,l.kt)("p",null,"For more information about the AMF model, see the ",(0,l.kt)("a",{parentName:"p",href:"amf_model"},"AMF model documentation")," resource."),(0,l.kt)("p",null,"The following figure shows the parsing process:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"parsing graph",src:t(1958).Z,width:"302",height:"312"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"SYAML is used to generate an AST from a YAML/JSON file"),(0,l.kt)("li",{parentName:"ul"},"AMF uses the AST to generate a graph of the model, called BaseUnit",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This model will be used in the following stages of AMF (resolution, validation, emission)")))),(0,l.kt)("h2",{id:"parsing-code-examples"},"Parsing code examples"),(0,l.kt)("p",null,"The file paths you give the parser must have the following structure:"),(0,l.kt)("p",null,"Windows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Absolute path: ",(0,l.kt)("inlineCode",{parentName:"li"},"file:///C:/testing/api.raml")),(0,l.kt)("li",{parentName:"ul"},"Relative path: ",(0,l.kt)("inlineCode",{parentName:"li"},"file://api.raml"))),(0,l.kt)("p",null,"MacOS and Unix:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Absolute path: ",(0,l.kt)("inlineCode",{parentName:"li"},"file:///Users/aml/testing/api.raml")),(0,l.kt)("li",{parentName:"ul"},"Relative path: ",(0,l.kt)("inlineCode",{parentName:"li"},"file://api.raml"))),(0,l.kt)("p",null,"Also, before parsing an AML dialect instance, you must register the dialect using the ",(0,l.kt)("inlineCode",{parentName:"p"},"AMF.registerDialect()")," function."),(0,l.kt)(r.Z,{groupId:"languages",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)(i.Z,{AMFVersion:"v4",language:"java",example:"java/ParsingTest.java",mdxType:"CodeGetter"})),(0,l.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)(i.Z,{AMFVersion:"v4",language:"js",example:"js/parsing.test.js",mdxType:"CodeGetter"}))))}d.isMDXComponent=!0},1958:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/parsing-graph-e9213bf147673deebdf6aec804c3467c.png"}}]);