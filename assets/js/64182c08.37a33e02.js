"use strict";(self.webpackChunkaml_website=self.webpackChunkaml_website||[]).push([[3971],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?i.createElement(f,o(o({ref:t},u),{},{components:n})):i.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8739:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>a,contentTitle:()=>o,metadata:()=>l,toc:()=>s,default:()=>u});var i=n(7462),r=(n(7294),n(3905));const a={id:"amf_initialization",title:"AMF initialization"},o=void 0,l={unversionedId:"AMF/Using AMF/amf_initialization",id:"version-4.x.x/AMF/Using AMF/amf_initialization",title:"AMF initialization",description:"After you add the AMF initialize method to your application code, you can initialize AMF and register the plugins you intend to use.",source:"@site/versioned_docs/version-4.x.x/AMF/Using AMF/2-AMF initialization.mdx",sourceDirName:"AMF/Using AMF",slug:"/AMF/Using AMF/amf_initialization",permalink:"/a-ml/docs/v4/AMF/Using AMF/amf_initialization",editUrl:"https://github.com/aml-org/a-ml/edit/develop/versioned_docs/version-4.x.x/AMF/Using AMF/2-AMF initialization.mdx",tags:[],version:"4.x.x",lastUpdatedBy:"Tomas Fernandez",lastUpdatedAt:1645135672,formattedLastUpdatedAt:"2/17/2022",sidebarPosition:2,frontMatter:{id:"amf_initialization",title:"AMF initialization"},sidebar:"version-4.x.x/myAutogeneratedSidebar",previous:{title:"AMF project configuration",permalink:"/a-ml/docs/v4/AMF/Using AMF/amf_setup"},next:{title:"Parsing with AMF",permalink:"/a-ml/docs/v4/AMF/Using AMF/amf_parsing"}},s=[],p={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"After you add the AMF initialize method to your application code, you can initialize AMF and register the plugins you intend to use."),(0,r.kt)("p",null,"The initialization method, ",(0,r.kt)("inlineCode",{parentName:"p"},"AMF.init()")," registers the following plugins:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"WebApi"),(0,r.kt)("li",{parentName:"ul"},"Vocabularies"),(0,r.kt)("li",{parentName:"ul"},"AMFCustomValidation"),(0,r.kt)("li",{parentName:"ul"},"PayloadValidatorPlugin")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"AMF.init()")," method initializes the core functions of AMF by running ",(0,r.kt)("inlineCode",{parentName:"p"},"amf.Core.init()"),", as show in the following snippet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:'title="AMF.scala"',title:'"AMF.scala"'},"def init(executionEnvironment: BaseExecutionEnvironment): ClientFuture[Unit] = {\n    WebApi.register(executionEnvironment)\n    Vocabularies.register()\n    AMFCustomValidation.register()\n    amf.Core.registerPlugin(PayloadValidatorPlugin)\n    amf.Core.init(executionEnvironment)\n}\n")),(0,r.kt)("p",null,"Depending on your use case, you can cherry-pick and use only the plugins you need. For example, if you wanted to parse and resolve the OAS 3.0 specification,\nyou would need only the WebApi plugin:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"WebApi.register();\nCore.init().get();\n")),(0,r.kt)("p",null,"For more information on parsing, see ",(0,r.kt)("a",{parentName:"p",href:"amf_parsing"},"Parsing with AMF"),"."))}u.isMDXComponent=!0}}]);