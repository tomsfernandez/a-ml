"use strict";(self.webpackChunkaml_website=self.webpackChunkaml_website||[]).push([[8110],{3416:(e,a,t)=>{t.d(a,{Z:()=>i});var n=t(7294),l=t(1736);const r={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/main/"},s={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/main/",scala:"scala/scalaPlatform/",java:"java/javaPlatform/",ts:"ts/"};const i=e=>{let{AMFVersion:a,language:t,example:i,lineStart:o,lineEnd:m,hideLink:u,fromMain:p}=e;const c=(0,n.useRef)(!0),[d,f]=(0,n.useState)(""),[h,v]=(0,n.useState)(""),g=(0,n.useCallback)((async()=>{const e=function(e){return"v4"===e?r:s}(a),n=function(e,a){if(a===r)return"";switch(e){case"scala":default:return a.scala;case"java":return a.java;case"ts":return a.ts;case"js":return a.js}}(t,e),l=(p?e.mainUrl:e.testsUrl)+n+i,u=l.replace("raw.githubusercontent.com/aml-org/examples","github.com/aml-org/examples/tree"),d=await fetch(l),h=await d.text();if(!c.current)return null;if(v(u),f(h),m-o>0){let e=h.split("\n").slice(o,m).join("\n");f(e)}}),[]);return(0,n.useEffect)((()=>(g(),()=>{c.current=!1})),[]),n.createElement("div",null,n.createElement(l.Z,{className:t},d),!u&&n.createElement("p",null,"Code extracted from the examples ",n.createElement("strong",null,n.createElement("a",{href:h},"GitHub repository")),"."))}},8215:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294);const l=function(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",hidden:t,className:l},a)}},9877:(e,a,t)=>{t.d(a,{Z:()=>u});var n=t(7462),l=t(7294),r=t(2389),s=t(5773),i=t(6010);const o="tabItem_LplD";function m(e){var a,t,r;const{lazy:m,block:u,defaultValue:p,values:c,groupId:d,className:f}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:h.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),g=(0,s.lx)(v,((e,a)=>e.value===a.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const b=null===p?p:null!=(a=null!=p?p:null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)?a:null==(r=h[0])?void 0:r.props.value;if(null!==b&&!v.some((e=>e.value===b)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:y}=(0,s.UB)(),[T,N]=(0,l.useState)(b),w=[],{blockElementScrollPositionUntilNextRender:x}=(0,s.o5)();if(null!=d){const e=k[d];null!=e&&e!==T&&v.some((a=>a.value===e))&&N(e)}const A=e=>{const a=e.currentTarget,t=w.indexOf(a),n=v[t].value;n!==T&&(x(a),N(n),null!=d&&y(d,n))},E=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]||w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]||w[w.length-1];break}}null==(a=t)||a.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},f)},v.map((e=>{let{value:a,label:t,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===a?0:-1,"aria-selected":T===a,key:a,ref:e=>w.push(e),onKeyDown:E,onFocus:A,onClick:A},r,{className:(0,i.Z)("tabs__item",o,null==r?void 0:r.className,{"tabs__item--active":T===a})}),null!=t?t:a)}))),m?(0,l.cloneElement)(h.filter((e=>e.props.value===T))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},h.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==T})))))}function u(e){const a=(0,r.Z)();return l.createElement(m,(0,n.Z)({key:String(a)},e))}},9175:(e,a,t)=>{t.r(a),t.d(a,{frontMatter:()=>o,contentTitle:()=>m,metadata:()=>u,toc:()=>p,default:()=>d});var n=t(7462),l=(t(7294),t(3905)),r=t(9877),s=t(8215),i=t(3416);const o={id:"amf_transformation",title:"Transformation",sidebar_position:4},m=void 0,u={unversionedId:"amf/using-amf/amf_transformation",id:"amf/using-amf/amf_transformation",title:"Transformation",description:"'Transformation' is the process of applying incremental transformations to the AMF semantic graph model.",source:"@site/docs/amf/using-amf/transformation.mdx",sourceDirName:"amf/using-amf",slug:"/amf/using-amf/amf_transformation",permalink:"/docs/amf/using-amf/amf_transformation",editUrl:"https://github.com/aml-org/a-ml/edit/develop/docs/amf/using-amf/transformation.mdx",tags:[],version:"current",lastUpdatedBy:"arielmirra",lastUpdatedAt:1632426056,formattedLastUpdatedAt:"9/23/2021",sidebarPosition:4,frontMatter:{id:"amf_transformation",title:"Transformation",sidebar_position:4},sidebar:"myAutogeneratedSidebar",previous:{title:"Parsing with AMF",permalink:"/docs/amf/using-amf/amf_parsing"},next:{title:"Validation",permalink:"/docs/amf/using-amf/amf_validation"}},p=[{value:"Pipelines",id:"pipelines",children:[],level:2},{value:"Transformation examples",id:"transformation-examples",children:[],level:2},{value:"Custom pipelines",id:"custom-pipelines",children:[],level:2}],c={toc:p};function d(e){let{components:a,...o}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,o,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"'Transformation' is the process of applying incremental transformations to the AMF ",(0,l.kt)("a",{parentName:"p",href:"amf_parsing#parsing-basics"},"semantic graph model"),".\nAMF provides several 'transformation pipelines'. The base pipeline comprises the following stages:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"resolution pipeline",src:t(8090).Z,width:"274",height:"382"})),(0,l.kt)("p",null,"Transformation allows you to flatten and simplify the AMF semantic graph model by:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Resolving links and inheritances"),(0,l.kt)("li",{parentName:"ul"},"Applying RAML traits and resourceTypes"),(0,l.kt)("li",{parentName:"ul"},"Normalization of shapes and parameters")),(0,l.kt)("p",null,"You'll also find these pipelines are important when converting from one API specification to another.\nFor example, when converting a RAML API to OAS the ",(0,l.kt)("em",{parentName:"p"},"'Compatibility'")," pipeline makes changes to the API Contract Model to have a valid, OAS-compliant API."),(0,l.kt)("h2",{id:"pipelines"},"Pipelines"),(0,l.kt)("p",null,"Depending on your needs, you can use one of the following AMF provided transformation pipelines:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Default"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Keeps only the parsed graph model and deletes all information no longer relevant, such as ",(0,l.kt)("inlineCode",{parentName:"li"},"document.declares")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Editing"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Keeps all information in already parsed nodes, such as the source and the declarations"),(0,l.kt)("li",{parentName:"ul"},"Use when someone is editing the API, such as an interactive API designer that uses AMF in the background"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Compatibility"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Must")," be used when converting an API to a different specification"),(0,l.kt)("li",{parentName:"ul"},"Includes additional AMF-specific information to aid in specification conversion"),(0,l.kt)("li",{parentName:"ul"},"You can find more information about this in the ",(0,l.kt)("a",{parentName:"li",href:"../../related-docs/amf_conversion"},"Conversion documentation"),".")))),(0,l.kt)("h2",{id:"transformation-examples"},"Transformation examples"),(0,l.kt)(r.Z,{groupId:"languages",defaultValue:"scala",values:[{label:"Scala",value:"scala"},{label:"Java",value:"java"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,l.kt)(i.Z,{language:"scala",example:"TransformationTest.scala",mdxType:"CodeGetter"})),(0,l.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)(i.Z,{language:"java",example:"TransformationTest.java",mdxType:"CodeGetter"})),(0,l.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)(i.Z,{language:"ts",example:"transformation.spec.ts",mdxType:"CodeGetter"}))),(0,l.kt)("h2",{id:"custom-pipelines"},"Custom pipelines"),(0,l.kt)("p",null,"You may also implement your own pipelines, see the example in the code snippet: ",(0,l.kt)("a",{parentName:"p",href:"../../cookbook/code_snippets#how-to-create-a-transformation-pipeline"},"How to create a Transformation Pipeline"),"."))}d.isMDXComponent=!0},8090:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/resolution-pipeline-70b90e2f1a7bd1ad936ea681886f1e13.png"}}]);