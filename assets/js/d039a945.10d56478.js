"use strict";(self.webpackChunkaml_website=self.webpackChunkaml_website||[]).push([[4909],{3416:(a,e,t)=>{t.d(e,{Z:()=>r});var l=t(7294),n=t(1736);const o={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/main/"},i={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/main/",scala:"scala/scalaPlatform/",java:"java/javaPlatform/",ts:"ts/"};const r=a=>{let{AMFVersion:e,language:t,example:r,lineStart:d,lineEnd:s,hideLink:p,fromMain:m}=a;const u=(0,l.useRef)(!0),[c,h]=(0,l.useState)(""),[k,v]=(0,l.useState)(""),y=(0,l.useCallback)((async()=>{const a=function(a){return"v4"===a?o:i}(e),l=function(a,e){if(e===o)return"";switch(a){case"scala":default:return e.scala;case"java":return e.java;case"ts":return e.ts;case"js":return e.js}}(t,a),n=(m?a.mainUrl:a.testsUrl)+l+r,p=n.replace("raw.githubusercontent.com/aml-org/examples","github.com/aml-org/examples/tree"),c=await fetch(n),k=await c.text();if(!u.current)return null;if(v(p),h(k),s-d>0){let a=k.split("\n").slice(d,s).join("\n");h(a)}}),[]);return(0,l.useEffect)((()=>(y(),()=>{u.current=!1})),[]),l.createElement("div",null,l.createElement(n.Z,{className:t},c),!p&&l.createElement("p",null,"Code extracted from the examples ",l.createElement("strong",null,l.createElement("a",{href:k},"GitHub repository")),"."))}},8215:(a,e,t)=>{t.d(e,{Z:()=>n});var l=t(7294);const n=function(a){let{children:e,hidden:t,className:n}=a;return l.createElement("div",{role:"tabpanel",hidden:t,className:n},e)}},9877:(a,e,t)=>{t.d(e,{Z:()=>p});var l=t(7462),n=t(7294),o=t(2389),i=t(5773),r=t(6010);const d="tabItem_LplD";function s(a){var e,t,o;const{lazy:s,block:p,defaultValue:m,values:u,groupId:c,className:h}=a,k=n.Children.map(a.children,(a=>{if((0,n.isValidElement)(a)&&void 0!==a.props.value)return a;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof a.type?a.type:a.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=u?u:k.map((a=>{let{props:{value:e,label:t,attributes:l}}=a;return{value:e,label:t,attributes:l}})),y=(0,i.lx)(v,((a,e)=>a.value===e.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((a=>a.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(e=null!=m?m:null==(t=k.find((a=>a.props.default)))?void 0:t.props.value)?e:null==(o=k[0])?void 0:o.props.value;if(null!==g&&!v.some((a=>a.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((a=>a.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:b,setTabGroupChoices:f}=(0,i.UB)(),[N,C]=(0,n.useState)(g),A=[],{blockElementScrollPositionUntilNextRender:F}=(0,i.o5)();if(null!=c){const a=b[c];null!=a&&a!==N&&v.some((e=>e.value===a))&&C(a)}const T=a=>{const e=a.currentTarget,t=A.indexOf(e),l=v[t].value;l!==N&&(F(e),C(l),null!=c&&f(c,l))},M=a=>{var e;let t=null;switch(a.key){case"ArrowRight":{const e=A.indexOf(a.currentTarget)+1;t=A[e]||A[0];break}case"ArrowLeft":{const e=A.indexOf(a.currentTarget)-1;t=A[e]||A[A.length-1];break}}null==(e=t)||e.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},h)},v.map((a=>{let{value:e,label:t,attributes:o}=a;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:N===e?0:-1,"aria-selected":N===e,key:e,ref:a=>A.push(a),onKeyDown:M,onFocus:T,onClick:T},o,{className:(0,r.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":N===e})}),null!=t?t:e)}))),s?(0,n.cloneElement)(k.filter((a=>a.props.value===N))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},k.map(((a,e)=>(0,n.cloneElement)(a,{key:e,hidden:a.props.value!==N})))))}function p(a){const e=(0,o.Z)();return n.createElement(s,(0,l.Z)({key:String(e)},a))}},7910:(a,e,t)=>{t.r(e),t.d(e,{frontMatter:()=>d,contentTitle:()=>s,metadata:()=>p,toc:()=>m,default:()=>c});var l=t(7462),n=(t(7294),t(3905)),o=t(9877),i=t(8215),r=t(3416);const d={id:"payload_validation",title:"Payload validation with AMF",sidebar_position:2},s=void 0,p={unversionedId:"cookbook/payload_validation",id:"cookbook/payload_validation",title:"Payload validation with AMF",description:"You can use AMF to validate incoming payloads to an API already deployed and running. To do so, you need to:",source:"@site/docs/cookbook/payload-validation.mdx",sourceDirName:"cookbook",slug:"/cookbook/payload_validation",permalink:"/docs/cookbook/payload_validation",editUrl:"https://github.com/aml-org/a-ml/edit/develop/docs/cookbook/payload-validation.mdx",tags:[],version:"current",lastUpdatedBy:"Tomas Fernandez",lastUpdatedAt:1645135312,formattedLastUpdatedAt:"2/17/2022",sidebarPosition:2,frontMatter:{id:"payload_validation",title:"Payload validation with AMF",sidebar_position:2},sidebar:"myAutogeneratedSidebar",previous:{title:"Creating an AMF model in memory",permalink:"/docs/cookbook/model_in_memory"},next:{title:"AMF code snippets",permalink:"/docs/cookbook/code_snippets"}},m=[{value:"Get the AMF <code>Shape</code> to use for validation",id:"get-the-amf-shape-to-use-for-validation",children:[],level:2},{value:"Create a <code>AMFShapePayloadValidator</code> for a specific Shape",id:"create-a-amfshapepayloadvalidator-for-a-specific-shape",children:[],level:2},{value:"Validate the payloads",id:"validate-the-payloads",children:[],level:2},{value:"Example code for payload validation",id:"example-code-for-payload-validation",children:[],level:2},{value:"Custom payload validation plugin",id:"custom-payload-validation-plugin",children:[],level:2}],u={toc:m};function c(a){let{components:e,...d}=a;return(0,n.kt)("wrapper",(0,l.Z)({},u,d,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"You can use AMF to validate incoming payloads to an API already deployed and running. To do so, you need to:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Get the AMF ",(0,n.kt)("inlineCode",{parentName:"li"},"Shape")," to use for validation"),(0,n.kt)("li",{parentName:"ol"},"Create an ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFShapePayloadValidator")," for that shape",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"with the ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFElementClient"),"s ",(0,n.kt)("inlineCode",{parentName:"li"},"payloadValidatorFor()")," method"))),(0,n.kt)("li",{parentName:"ol"},"Validate payloads")),(0,n.kt)("h2",{id:"get-the-amf-shape-to-use-for-validation"},"Get the AMF ",(0,n.kt)("inlineCode",{parentName:"h2"},"Shape")," to use for validation"),(0,n.kt)("p",null,"When AMF parses an API it returns a ",(0,n.kt)("inlineCode",{parentName:"p"},"Document")," that encodes a ",(0,n.kt)("inlineCode",{parentName:"p"},"WebApi"),", which is the AMF API Contract Model based on the original API:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"api to webapi model",src:t(4946).Z,width:"1098",height:"530"})),(0,n.kt)("p",null,"You can obtain the specific ",(0,n.kt)("inlineCode",{parentName:"p"},"Shape")," you want from this object."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The AMF ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#webapi"},"API Contract Model")," documentation has more information about the WebApi object.")),(0,n.kt)("h2",{id:"create-a-amfshapepayloadvalidator-for-a-specific-shape"},"Create a ",(0,n.kt)("inlineCode",{parentName:"h2"},"AMFShapePayloadValidator")," for a specific Shape"),(0,n.kt)("p",null,"You can create an ",(0,n.kt)("inlineCode",{parentName:"p"},"AMFElementClient")," from any ",(0,n.kt)("inlineCode",{parentName:"p"},"AMFConfiguration")," simply by doing ",(0,n.kt)("inlineCode",{parentName:"p"},"configuration.elementClient()"),"."),(0,n.kt)("p",null,"All ",(0,n.kt)("inlineCode",{parentName:"p"},"AMFElementClient"),"s have the methods ",(0,n.kt)("inlineCode",{parentName:"p"},"payloadValidatorFor(shape, mediatype, mode)")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"payloadValidatorFor(shape, fragment)"),"\nthat return an ",(0,n.kt)("inlineCode",{parentName:"p"},"AMFShapePayloadValidator"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala",metastring:'title="AMFShapePayloadValidator interface"',title:'"AMFShapePayloadValidator','interface"':!0},"trait AMFShapePayloadValidator {\n  def validate(payload: String): Future[AMFValidationReport]\n  def validate(payloadFragment: PayloadFragment): Future[AMFValidationReport]\n  def syncValidate(payload: String): AMFValidationReport\n}\n")),(0,n.kt)("h2",{id:"validate-the-payloads"},"Validate the payloads"),(0,n.kt)("p",null,"To validate payloads use the ",(0,n.kt)("inlineCode",{parentName:"p"},"AMFShapePayloadValidator")," methods:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"validate(payload: String): Future[AMFValidationReport]")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"validates a given payload"),(0,n.kt)("li",{parentName:"ul"},"Returns a completable future of the ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFValidationReport")," object containing detailed information about any errors"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"validate(payloadFragment: PayloadFragment): Future[AMFValidationReport]")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Validates a payload from an ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/aml-org/amf/blob/develop/documentation/model.md#payloadfragment"},"AMF PayloadFragment")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"syncValidate(payload: String): AMFValidationReport")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Validates a payload synchronously"),(0,n.kt)("li",{parentName:"ul"},"Returns the ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFValidationReport")," directly")))),(0,n.kt)("h2",{id:"example-code-for-payload-validation"},"Example code for payload validation"),(0,n.kt)("p",null,"For example, consider a RAML API that declares:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("inlineCode",{parentName:"li"},"User")," schema with ",(0,n.kt)("inlineCode",{parentName:"li"},"firstname"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"lastname"),", and ",(0,n.kt)("inlineCode",{parentName:"li"},"age")," properties"),(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("inlineCode",{parentName:"li"},"/users")," endpoint with an HTTP POST method that requires a ",(0,n.kt)("inlineCode",{parentName:"li"},"User")," object as body parameter")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"#%RAML 1.0\ntitle: API with Types\ntypes:\n  User:\n    type: object\n    properties:\n      firstname: string\n      lastname:  string\n      age:       number\n/users:\n  post:\n    body:\n      application/json:\n        type: User\n")),(0,n.kt)("p",null,"To confirm that a given payload is a valid ",(0,n.kt)("inlineCode",{parentName:"p"},"User"),", you can use AMF payload validation following the previous steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Get the AMF ",(0,n.kt)("inlineCode",{parentName:"li"},"Shape")," to use for validation",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"The User schema we want can be obtained from the ",(0,n.kt)("inlineCode",{parentName:"li"},"Request"),"s ",(0,n.kt)("inlineCode",{parentName:"li"},"Payload")," object"))),(0,n.kt)("li",{parentName:"ol"},"Create an ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFShapePayloadValidator")," for that shape",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"with the ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFElementClient"),"s ",(0,n.kt)("inlineCode",{parentName:"li"},"payloadValidatorFor()")," method"))),(0,n.kt)("li",{parentName:"ol"},"Validate payloads",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"with the ",(0,n.kt)("inlineCode",{parentName:"li"},"AMFShapePayloadValidator"),"s ",(0,n.kt)("inlineCode",{parentName:"li"},"validate()")," methods")))),(0,n.kt)(o.Z,{groupId:"languages",defaultValue:"scala",values:[{label:"Scala",value:"scala"},{label:"Java",value:"java"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)(r.Z,{language:"scala",example:"PayloadValidationTest.scala",mdxType:"CodeGetter"})),(0,n.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)(r.Z,{language:"java",example:"PayloadValidationTest.java",mdxType:"CodeGetter"})),(0,n.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)(r.Z,{language:"ts",example:"payload.validation.spec.ts",mdxType:"CodeGetter"}))),(0,n.kt)("h2",{id:"custom-payload-validation-plugin"},"Custom payload validation plugin"),(0,n.kt)("p",null,"AMF lets you create a payload validation plugin by extending the ",(0,n.kt)("inlineCode",{parentName:"p"},"AMFShapePayloadValidationPlugin")," in Scala or Java, or\nimplementing the ",(0,n.kt)("inlineCode",{parentName:"p"},"JsAMFPayloadValidationPlugin")," in Javascript or Typescript."),(0,n.kt)("p",null,"For example: given the following implementations of payload validation plugins:"),(0,n.kt)(o.Z,{groupId:"languages",defaultValue:"scala",values:[{label:"Scala",value:"scala"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)(r.Z,{hideLink:!0,fromMain:!0,language:"scala",example:"CustomShapePayloadPlugin.scala",mdxType:"CodeGetter"})),(0,n.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)(r.Z,{hideLink:!0,fromMain:!0,language:"java",example:"CustomShapePayloadValidationPlugin.java",mdxType:"CodeGetter"}))),(0,n.kt)("p",null,"You can now use these to validate payloads:"),(0,n.kt)(o.Z,{groupId:"languages",defaultValue:"scala",values:[{label:"Scala",value:"scala"},{label:"Java",value:"java"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)(r.Z,{language:"scala",example:"CustomPayloadValidationPluginTest.scala",mdxType:"CodeGetter"})),(0,n.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)(r.Z,{language:"java",example:"CustomPayloadValidationPluginTest.java",mdxType:"CodeGetter"})),(0,n.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)(r.Z,{language:"ts",example:"custom.payload.validation.spec.ts",mdxType:"CodeGetter"}))))}c.isMDXComponent=!0},4946:(a,e,t)=>{t.d(e,{Z:()=>l});const l=t.p+"assets/images/api-to-webapi-1d8133c7425c0a4aa568e371501f061d.png"}}]);