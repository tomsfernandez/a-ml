"use strict";(self.webpackChunkaml_website=self.webpackChunkaml_website||[]).push([[7509],{3416:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294),n=a(1736);const l={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF4/src/main/"},o={testsUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/test/",mainUrl:"https://raw.githubusercontent.com/aml-org/examples/master/AMF5/src/main/",scala:"scala/scalaPlatform/",java:"java/javaPlatform/",ts:"ts/"};const i=e=>{let{AMFVersion:t,language:a,example:i,lineStart:s,lineEnd:m,hideLink:u,fromMain:d}=e;const p=(0,r.useRef)(!0),[c,h]=(0,r.useState)(""),[g,f]=(0,r.useState)(""),v=(0,r.useCallback)((async()=>{const e=function(e){return"v4"===e?l:o}(t),r=function(e,t){if(t===l)return"";switch(e){case"scala":default:return t.scala;case"java":return t.java;case"ts":return t.ts;case"js":return t.js}}(a,e),n=(d?e.mainUrl:e.testsUrl)+r+i,u=n.replace("raw.githubusercontent.com/aml-org/examples","github.com/aml-org/examples/tree"),c=await fetch(n),g=await c.text();if(!p.current)return null;if(f(u),h(g),m-s>0){let e=g.split("\n").slice(s,m).join("\n");h(e)}}),[]);return(0,r.useEffect)((()=>(v(),()=>{p.current=!1})),[]),r.createElement("div",null,r.createElement(n.Z,{className:a},c),!u&&r.createElement("p",null,"Code extracted from the examples ",r.createElement("strong",null,r.createElement("a",{href:g},"GitHub repository")),"."))}},8215:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(7294);const n=function(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>u});var r=a(7462),n=a(7294),l=a(2389),o=a(5773),i=a(6010);const s="tabItem_LplD";function m(e){var t,a,l;const{lazy:m,block:u,defaultValue:d,values:p,groupId:c,className:h}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=p?p:g.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),v=(0,o.lx)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===d?d:null!=(t=null!=d?d:null==(a=g.find((e=>e.props.default)))?void 0:a.props.value)?t:null==(l=g[0])?void 0:l.props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:b}=(0,o.UB)(),[w,C]=(0,n.useState)(k),x=[],{blockElementScrollPositionUntilNextRender:y}=(0,o.o5)();if(null!=c){const e=N[c];null!=e&&e!==w&&f.some((t=>t.value===e))&&C(e)}const A=e=>{const t=e.currentTarget,a=x.indexOf(t),r=f[a].value;r!==w&&(y(t),C(r),null!=c&&b(c,r))},T=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;a=x[t]||x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;a=x[t]||x[x.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},h)},f.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>x.push(e),onKeyDown:T,onFocus:A,onClick:A},l,{className:(0,i.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),m?(0,n.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},g.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function u(e){const t=(0,l.Z)();return n.createElement(m,(0,r.Z)({key:String(t)},e))}},6309:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>s,contentTitle:()=>m,metadata:()=>u,toc:()=>d,default:()=>c});var r=a(7462),n=(a(7294),a(3905)),l=a(9877),o=a(8215),i=a(3416);const s={id:"error_handlers",title:"Custom error handlers"},m=void 0,u={unversionedId:"Customizable Configurations/error_handlers",id:"version-4.x.x/Customizable Configurations/error_handlers",title:"Custom error handlers",description:"The following features of AMF error handling are still in development:",source:"@site/versioned_docs/version-4.x.x/Customizable Configurations/error-handlers.mdx",sourceDirName:"Customizable Configurations",slug:"/Customizable Configurations/error_handlers",permalink:"/docs/v4/Customizable Configurations/error_handlers",editUrl:"https://github.com/aml-org/a-ml/edit/develop/versioned_docs/version-4.x.x/Customizable Configurations/error-handlers.mdx",tags:[],version:"4.x.x",lastUpdatedBy:"Tomas Fernandez",lastUpdatedAt:1645135312,formattedLastUpdatedAt:"2/17/2022",frontMatter:{id:"error_handlers",title:"Custom error handlers"},sidebar:"version-4.x.x/myAutogeneratedSidebar",previous:{title:"Payload validation with AMF",permalink:"/docs/v4/Cookbook/payload_validation"},next:{title:"Custom resource loaders",permalink:"/docs/v4/Customizable Configurations/resource_loaders"}},d=[{value:"AMF error handlers",id:"amf-error-handlers",children:[],level:2},{value:"How error handling works in AMF",id:"how-error-handling-works-in-amf",children:[],level:2},{value:"Example <code>ValidationReport</code>",id:"example-validationreport",children:[],level:2},{value:"Implement the error handler interface",id:"implement-the-error-handler-interface",children:[],level:2},{value:"Example code for a custom error handler",id:"example-code-for-a-custom-error-handler",children:[],level:2}],p={toc:d};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"The following features of AMF error handling are still in development:"),(0,n.kt)("ul",{parentName:"div"},(0,n.kt)("li",{parentName:"ul"},"Support for custom error handling in parsing, validation, and emission stages"),(0,n.kt)("li",{parentName:"ul"},"Javascript support")))),(0,n.kt)("h2",{id:"amf-error-handlers"},"AMF error handlers"),(0,n.kt)("p",null,"An error handler is a mechanism that lets you handle any errors that arise while using AMF.\nYou can define custom error handlers and use them as plugins in AMF's resolution stage."),(0,n.kt)("p",null,"There are 3 types of errors in AMF, denoted by the ",(0,n.kt)("inlineCode",{parentName:"p"},"amf.core.validation.SeverityLevels")," object:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Info"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Indicates something may or may not be wrong"),(0,n.kt)("li",{parentName:"ul"},"Typically informational depending on user intent"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Warning"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Indicates that something is not correct and action is required"),(0,n.kt)("li",{parentName:"ul"},"Includes warnings about future changes, tool deprecations, or errors that will become violations in the future"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Violation"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Indicates that something is in violation of normal operations or is not compliant with its specification"),(0,n.kt)("li",{parentName:"ul"},"Invalidates the AMF graph model")))),(0,n.kt)("h2",{id:"how-error-handling-works-in-amf"},"How error handling works in AMF"),(0,n.kt)("p",null,"AMF transforms each error into a ",(0,n.kt)("inlineCode",{parentName:"p"},"ValidationResult"),", and collects all generated results in a ",(0,n.kt)("inlineCode",{parentName:"p"},"ValidationReport"),".\nAfter the ",(0,n.kt)("a",{parentName:"p",href:"../AMF/Using%20AMF/amf_validation#validation-examples"},"validation stage"),", AMF returns the ValidationReport."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala",metastring:'title="amf.core.validation.core.ValidationReport"',title:'"amf.core.validation.core.ValidationReport"'},"trait ValidationResult {\n  def message: Option[String]\n  def path: String\n  def sourceConstraintComponent: String\n  def focusNode: String\n  def severity: String\n  def sourceShape: String\n}\n\ntrait ValidationReport {\n  def conforms: Boolean\n  def results: List[ValidationResult]\n}\n")),(0,n.kt)("h2",{id:"example-validationreport"},"Example ",(0,n.kt)("inlineCode",{parentName:"h2"},"ValidationReport")),(0,n.kt)("p",null,"For example, consider the following OAS 3.0 API:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "openapi": "3.0.0",\n  "info": {\n    "title": "test api",\n    "version": "1"\n  }\n}\n')),(0,n.kt)("p",null,"This API is invalid as it doesn't have the ",(0,n.kt)("inlineCode",{parentName:"p"},"paths:{}")," object that is required by the\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema"},"OpenAPI 3.0 Specification"),".\nIn this case, AMF returns the following ",(0,n.kt)("inlineCode",{parentName:"p"},"ValidationReport"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"Profile: OAS 3.0\nConforms? false\nNumber of results: 1\n- Source: http://a.ml/vocabularies/amf/parser#mandatory-paths-property\n  Message: 'paths' is mandatory in OAS spec\n  Level: Violation\n  Target: file://amf-client/shared/src/test/resources/validations/oas3/paths-property.json#/web-api\n  Property:\n  Position: None\n  Location:\n")),(0,n.kt)("p",null,"The report contains detailed error information, but with a custom error handler, you could implement additional behavior to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Stop execution when a certain type of error is found"),(0,n.kt)("li",{parentName:"ul"},"Process, modify, or log incoming errors"),(0,n.kt)("li",{parentName:"ul"},"Run and check errors of a single stage (for example, parse an OAS 2.0 API and check if it has parsing errors)")),(0,n.kt)("p",null,"To add custom functionality, you need to implement the provided ",(0,n.kt)("strong",{parentName:"p"},"error handler interface"),"."),(0,n.kt)("h2",{id:"implement-the-error-handler-interface"},"Implement the error handler interface"),(0,n.kt)("p",null,"The error handler interface is located at ",(0,n.kt)("inlineCode",{parentName:"p"},"amf.client.resolve"),", as it's used only in the resolution stage.\nThe error handler interface declares the method ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"reportConstraint()")),", which AMF uses to report runtime errors:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala",metastring:'title="amf.client.resolve.ClientErrorHandler"',title:'"amf.client.resolve.ClientErrorHandler"'},"trait ClientErrorHandler {\n\n  def reportConstraint(id: String,\n                       node: String,\n                       property: ClientOption[String],\n                       message: String,\n                       range: ClientOption[amf.core.parser.Range],\n                       level: String,\n                       location: ClientOption[String]): Unit\n}\n")),(0,n.kt)("p",null,"The method takes the following arguments:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"id")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The id of the error"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"node")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The AMF model node containing the error"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"property"))," (optional)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The specific property that is faulty"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"message")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The message that describes the error"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"range"))," (optional)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The specific part of the parsed file that generates the error"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"level")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The SeverityLevel of the error: info, warning, or violation"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"location"))," (optional)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The error's location in the AMF graph model")))),(0,n.kt)("h2",{id:"example-code-for-a-custom-error-handler"},"Example code for a custom error handler"),(0,n.kt)("p",null,"The following example code is for a custom error handler that throws an exception when an error is found:"),(0,n.kt)(l.Z,{groupId:"languages",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)(i.Z,{AMFVersion:"v4",language:"java",example:"java/ErrorHandlerTest.java",mdxType:"CodeGetter"})),(0,n.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)(i.Z,{AMFVersion:"v4",language:"js",example:"js/error-handler.test.js",mdxType:"CodeGetter"}))))}c.isMDXComponent=!0}}]);